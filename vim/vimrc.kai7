"" -- Customization config --
set shiftwidth=4
set tabstop=4
set softtabstop=4
set expandtab

set t_Co=256
set nocompatible

set number
set ruler
set backspace=2
set ru
set confirm

let c='a'
while c <= 'z'
    exec "set <A-".c.">=\e".c
    exec "imap \e".c." <A-".c.">"
    let c = nr2char(1+char2nr(c))
endw

set timeout ttimeoutlen=50

nnoremap <A-j> :tabprevious<CR>
nnoremap <A-k> :tabnext<CR>
nnoremap te :tabedit 
nnoremap > :vertical resize +1<CR>
nnoremap < :vertical resize -1<CR>


" -- Plugin setting --
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Keep Plugin commands between vundle#begin/end.

Plugin 'tomasr/molokai'
Plugin 'w0ng/vim-hybrid'
Plugin 'octol/vim-cpp-enhanced-highlight'
"Plugin 'Lokaltog/vim-powerline'
"Plugin 'powerline/powerline'
Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'scrooloose/nerdtree'
"Plugin 'majutsushi/tagbar'

"Plugin 'jiangmiao/auto-pairs'
Plugin 'ervandew/supertab'
Plugin 'davidhalter/jedi-vim'

"Plugin 'rip-rip/clang_complete'

"Plugin 'SirVer/ultisnips'
" Snippets are separated from the engine. Add this if you want them:
"Plugin 'honza/vim-snippets'
"Plugin 'Rip-Rip/clang_complete'

"Plugin 'scrooloose/syntastic'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" -- Colorscheme setting --
syntax on
colorscheme molokai
"autocmd! BufEnter,BufNewFile *.c,*.cpp colorscheme hybrid
" -- vim-cpp-enhanced-highlight --
let g:cpp_class_scope_highlight = 1             " Highlighting of class scope.
"let g:cpp_experimental_template_highlight = 1   " Highlighting of template functions.

" -- Powerline setting --
let g:airline#extensions#tabline#enabled = 1
set laststatus=2
set ambiwidth=double
"set fillchars+=stl:\ ,stlnc:\
let g:airline_theme='powerlineish'
"let g:airline_theme='light'
"let g:airline_theme='murmur'
"set encoding=utf-8
let g:airline_powerline_fonts = 1
" the separator used on the left side
let g:airline_left_sep=''
" the separator used on the right side 
let g:airline_right_sep=''
"if !exists('g:airline_symbols')
"    let g:airline_symbols = {}
"endif
"

"let g:airline_symbols.space = "\ua0"
"set laststatus=2 " means always show status bar
                 " 0: neve
                 " 1: only if there are at least two windows 
                 "    (this one is the default)
                 " 2: always
"set encoding=utf-8
"let g:Powerline_symbols = 'fancy'

"" -- NERDTree setting --
"map <F5> :NERDTreeToggle<CR>
"
"" -- Tagbar setting --
"nmap <F8> :TagbarToggle<CR>
"let g:tagbar_width = 40
"
"" -- AutoPairs setting --
"
"" -- SuperTab setting --
"let g:SuperTabDefaultCompletionType='<c-x><c-u><c-p>'
"
" -- JEDI setting
let g:jedi#completions_command = "<C-N>"
let g:pymode_rope = 0
let g:SuperTabDefaultCompletionType = "context"
let g:jedi#popup_on_dot = 0
autocmd FileType python setlocal completeopt-=preview
"let g:jedi#use_tabs_not_buffers = 1
"let g:jedi#use_splits_not_buffers = "left"
"jedi.preload_module('os', 'sys', 'math', 'whatever_module_you_want')
